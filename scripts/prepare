#!/bin/sh

set -e

fail() { echo -e "$*" ; exit 1 ; }

bosh_cli_check() {
  if ! command -v bosh &>/dev/null
  then fail "'bosh' command was not found in your path, please 'gem install bosh_cli' and try again."
  fi
}

bosh_target_check() {
  boshTarget=$(bosh target 2>&1)
  case "${boshTarget}" in
    (Current\ target\ is*)
      echo ${boshTarget}
      ;;
    (*)
      fail "A bosh director is not targeted, please target a director and login then try again."
      ;;
  esac
}

prepare_blobs() {
  [ -d "${releasePath}/blobs" ] || mkdir "${releasePath}/blobs"
  echo "Preparing all packages..."

  #find -path './packages/*' -name prepare -type f -exec bash -c "[ -s ${releasePath}/blobs/${0:2} ] && ( echo $releasePath/blobs/${0:2}; cd ${releasePath}/blobs ; $SHELL ${releasePath}/${0:2} )" {} \;
  for prep in $(find -path './packages/*' -name prepare -type f)
  do
    if [ -s ${prep} ]
    then
      echo ${prep}
      ( cd ${releasePath}/blobs ; ${SHELL} ${releasePath}/${prep} )
    else
      echo Could not find ${prep}
    fi
  done
}

prepare_dev_release() {
  echo "bosh create release --with-tarball --force"
  bosh create release --with-tarball --force
  echo "bosh -n upload release"
  bosh -n upload release
}

releasePath=$(cd $(dirname $0)/../ ; echo $PWD)

# bosh_target_check
# bosh_cli_check

prepare_blobs
